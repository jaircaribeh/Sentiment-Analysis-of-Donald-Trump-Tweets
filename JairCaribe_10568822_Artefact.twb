<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0315.1000                               -->
<workbook original-version='18.1' source-build='2020.4.3 (20204.21.0315.1000)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='1' max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='tweets_01-08-2021+' inline='true' name='federated.1dlns1b0zfsock17wqb640whwz2q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tweets_01-08-2021' name='textscan.1ra3pix0sp7vfb1c3mflu18c7wqk'>
            <connection class='textscan' directory='C:/Users/jairc/Downloads/trump-twitter-v4' filename='tweets_01-08-2021.csv' password='' server='' />
          </named-connection>
          <named-connection caption='tweets_01-08-2021 (2)' name='textscan.1dq5xly19ipi3l18zzsu806fpkey'>
            <connection class='textscan' directory='C:/Users/jairc/Downloads/trump-twitter-v4' filename='tweets_01-08-2021.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ra3pix0sp7vfb1c3mflu18c7wqk' name='tweets_01-08-2021.csv' table='[tweets_01-08-2021#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='text' ordinal='1' />
            <column datatype='boolean' name='isRetweet' ordinal='2' />
            <column datatype='boolean' name='isDeleted' ordinal='3' />
            <column datatype='string' name='device' ordinal='4' />
            <column datatype='integer' name='favorites' ordinal='5' />
            <column datatype='integer' name='retweets' ordinal='6' />
            <column datatype='datetime' name='date' ordinal='7' />
            <column datatype='boolean' name='isFlagged' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1ra3pix0sp7vfb1c3mflu18c7wqk' name='tweets_01-08-2021.csv' table='[tweets_01-08-2021#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='text' ordinal='1' />
              <column datatype='boolean' name='isRetweet' ordinal='2' />
              <column datatype='boolean' name='isDeleted' ordinal='3' />
              <column datatype='string' name='device' ordinal='4' />
              <column datatype='integer' name='favorites' ordinal='5' />
              <column datatype='integer' name='retweets' ordinal='6' />
              <column datatype='datetime' name='date' ordinal='7' />
              <column datatype='boolean' name='isFlagged' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1ra3pix0sp7vfb1c3mflu18c7wqk' name='tweets_01-08-2021.csv1' table='[tweets_01-08-2021#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='text' ordinal='1' />
              <column datatype='boolean' name='isRetweet' ordinal='2' />
              <column datatype='boolean' name='isDeleted' ordinal='3' />
              <column datatype='string' name='device' ordinal='4' />
              <column datatype='integer' name='favorites' ordinal='5' />
              <column datatype='integer' name='retweets' ordinal='6' />
              <column datatype='datetime' name='date' ordinal='7' />
              <column datatype='boolean' name='isFlagged' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[date (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[date]' />
          <map key='[date]' value='[tweets_01-08-2021.csv].[date]' />
          <map key='[device (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[device]' />
          <map key='[device]' value='[tweets_01-08-2021.csv].[device]' />
          <map key='[favorites (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[favorites]' />
          <map key='[favorites]' value='[tweets_01-08-2021.csv].[favorites]' />
          <map key='[id (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[id]' />
          <map key='[id]' value='[tweets_01-08-2021.csv].[id]' />
          <map key='[isDeleted (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[isDeleted]' />
          <map key='[isDeleted]' value='[tweets_01-08-2021.csv].[isDeleted]' />
          <map key='[isFlagged (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[isFlagged]' />
          <map key='[isFlagged]' value='[tweets_01-08-2021.csv].[isFlagged]' />
          <map key='[isRetweet (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[isRetweet]' />
          <map key='[isRetweet]' value='[tweets_01-08-2021.csv].[isRetweet]' />
          <map key='[retweets (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[retweets]' />
          <map key='[retweets]' value='[tweets_01-08-2021.csv].[retweets]' />
          <map key='[text (tweets_01-08-2021.csv1)]' value='[tweets_01-08-2021.csv1].[text]' />
          <map key='[text]' value='[tweets_01-08-2021.csv].[text]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isRetweet</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isRetweet]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>isRetweet</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isDeleted</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isDeleted]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>isDeleted</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>device</remote-name>
            <remote-type>129</remote-type>
            <local-name>[device]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>device</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>favorites</remote-name>
            <remote-type>20</remote-type>
            <local-name>[favorites]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>favorites</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retweets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[retweets]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>retweets</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isFlagged</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isFlagged]</local-name>
            <parent-name>[tweets_01-08-2021.csv]</parent-name>
            <remote-alias>isFlagged</remote-alias>
            <ordinal>8</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isRetweet</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isRetweet (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>isRetweet</remote-alias>
            <ordinal>11</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isDeleted</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isDeleted (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>isDeleted</remote-alias>
            <ordinal>12</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>device</remote-name>
            <remote-type>129</remote-type>
            <local-name>[device (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>device</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>favorites</remote-name>
            <remote-type>20</remote-type>
            <local-name>[favorites (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>favorites</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retweets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[retweets (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>retweets</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isFlagged</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isFlagged (tweets_01-08-2021.csv1)]</local-name>
            <parent-name>[tweets_01-08-2021.csv1]</parent-name>
            <remote-alias>isFlagged</remote-alias>
            <ordinal>17</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='tweets_01-08-2021.csv' datatype='table' name='[__tableau_internal_object_id__].[tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='tweets_01-08-2021.csv1' datatype='table' name='[__tableau_internal_object_id__].[tweets_01-08-2021.csv_E5947C041233432CA60032025B238044]' role='measure' type='quantitative' />
      <column caption='Date (Tweets 01-08-2021.Csv1)' datatype='datetime' name='[date (tweets_01-08-2021.csv1)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Device (Tweets 01-08-2021.Csv1)' datatype='string' name='[device (tweets_01-08-2021.csv1)]' role='dimension' type='nominal' />
      <column caption='Device' datatype='string' name='[device]' role='dimension' type='nominal' />
      <column caption='Favorites (Tweets 01-08-2021.Csv1)' datatype='integer' name='[favorites (tweets_01-08-2021.csv1)]' role='measure' type='quantitative' />
      <column caption='Favorites' datatype='integer' name='[favorites]' role='measure' type='quantitative' />
      <column caption='Id (Tweets 01-08-2021.Csv1)' datatype='integer' name='[id (tweets_01-08-2021.csv1)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='isDeleted (tweets 01-08-2021.csv1)' datatype='boolean' name='[isDeleted (tweets_01-08-2021.csv1)]' role='dimension' type='nominal' />
      <column caption='Is Deleted' datatype='boolean' name='[isDeleted]' role='dimension' type='nominal' />
      <column caption='isFlagged (tweets 01-08-2021.csv1)' datatype='boolean' name='[isFlagged (tweets_01-08-2021.csv1)]' role='dimension' type='nominal' />
      <column caption='Is Flagged' datatype='boolean' name='[isFlagged]' role='dimension' type='nominal' />
      <column caption='isRetweet (tweets 01-08-2021.csv1)' datatype='boolean' name='[isRetweet (tweets_01-08-2021.csv1)]' role='dimension' type='nominal' />
      <column caption='Is Retweet' datatype='boolean' name='[isRetweet]' role='dimension' type='nominal' />
      <column caption='Retweets (Tweets 01-08-2021.Csv1)' datatype='integer' name='[retweets (tweets_01-08-2021.csv1)]' role='measure' type='quantitative' />
      <column caption='Retweets' datatype='integer' name='[retweets]' role='measure' type='quantitative' />
      <column caption='Text (Tweets 01-08-2021.Csv1)' datatype='string' name='[text (tweets_01-08-2021.csv1)]' role='dimension' type='nominal' />
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tweets_01-08-2021.csv' id='tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4'>
            <properties context=''>
              <relation connection='textscan.1ra3pix0sp7vfb1c3mflu18c7wqk' name='tweets_01-08-2021.csv' table='[tweets_01-08-2021#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='text' ordinal='1' />
                  <column datatype='boolean' name='isRetweet' ordinal='2' />
                  <column datatype='boolean' name='isDeleted' ordinal='3' />
                  <column datatype='string' name='device' ordinal='4' />
                  <column datatype='integer' name='favorites' ordinal='5' />
                  <column datatype='integer' name='retweets' ordinal='6' />
                  <column datatype='datetime' name='date' ordinal='7' />
                  <column datatype='boolean' name='isFlagged' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='tweets_01-08-2021.csv1' id='tweets_01-08-2021.csv_E5947C041233432CA60032025B238044'>
            <properties context=''>
              <relation connection='textscan.1ra3pix0sp7vfb1c3mflu18c7wqk' name='tweets_01-08-2021.csv1' table='[tweets_01-08-2021#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='text' ordinal='1' />
                  <column datatype='boolean' name='isRetweet' ordinal='2' />
                  <column datatype='boolean' name='isDeleted' ordinal='3' />
                  <column datatype='string' name='device' ordinal='4' />
                  <column datatype='integer' name='favorites' ordinal='5' />
                  <column datatype='integer' name='retweets' ordinal='6' />
                  <column datatype='datetime' name='date' ordinal='7' />
                  <column datatype='boolean' name='isFlagged' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[date (tweets_01-08-2021.csv1)]' />
            </expression>
            <first-end-point object-id='tweets_01-08-2021.csv_0C5C4B2E4595461D96CE43AB80A067D4' />
            <second-end-point object-id='tweets_01-08-2021.csv_E5947C041233432CA60032025B238044' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='trump_twitter_adjectives (1)' inline='true' name='federated.1lnp4lz0ggcl3615et3b602np618' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='trump_twitter_adjectives (1)' name='textscan.0qbn3gp1ubwg2x147v0q21dm4mje'>
            <connection class='textscan' directory='C:/Users/jairc/Downloads' filename='trump_twitter_adjectives (1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0qbn3gp1ubwg2x147v0q21dm4mje' name='trump_twitter_adjectives (1).csv' table='[trump_twitter_adjectives (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='Word' ordinal='0' />
            <column datatype='integer' name='Positive' ordinal='1' />
            <column datatype='integer' name='Negative' ordinal='2' />
            <column datatype='integer' name='Neutral' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0qbn3gp1ubwg2x147v0q21dm4mje' name='trump_twitter_adjectives (1).csv' table='[trump_twitter_adjectives (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='Word' ordinal='0' />
            <column datatype='integer' name='Positive' ordinal='1' />
            <column datatype='integer' name='Negative' ordinal='2' />
            <column datatype='integer' name='Neutral' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[trump_twitter_adjectives (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Word</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Word]</local-name>
            <parent-name>[trump_twitter_adjectives (1).csv]</parent-name>
            <remote-alias>Word</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trump_twitter_adjectives (1).csv_9A2B8ED2C97A4122A19030D2C6882F2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Positive]</local-name>
            <parent-name>[trump_twitter_adjectives (1).csv]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trump_twitter_adjectives (1).csv_9A2B8ED2C97A4122A19030D2C6882F2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Negative]</local-name>
            <parent-name>[trump_twitter_adjectives (1).csv]</parent-name>
            <remote-alias>Negative</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trump_twitter_adjectives (1).csv_9A2B8ED2C97A4122A19030D2C6882F2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neutral</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Neutral]</local-name>
            <parent-name>[trump_twitter_adjectives (1).csv]</parent-name>
            <remote-alias>Neutral</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trump_twitter_adjectives (1).csv_9A2B8ED2C97A4122A19030D2C6882F2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Positive]' role='measure' type='quantitative' />
      <column datatype='string' name='[Word]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='trump_twitter_adjectives (1).csv' datatype='table' name='[__tableau_internal_object_id__].[trump_twitter_adjectives (1).csv_9A2B8ED2C97A4122A19030D2C6882F2C]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Favorites' datatype='integer' name='[favorites]' role='measure' type='quantitative' />
      <column caption='Retweets' datatype='integer' name='[retweets]' role='measure' type='quantitative' />
      <column-instance column='[Word]' derivation='None' name='[none:Word:nk]' pivot='key' type='nominal' />
      <group caption='Top N by Parameter' name='[Top N by Parameter]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Positive])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Word]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Word:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;adaptable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;anemic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;asymptomatic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;bicameral&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;charismatic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;composite&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;courageous&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;deductible&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;direct&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;easy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;emphatic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;eternal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;factual&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;forensic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;genetic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;habitual&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hypocritical&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;impossible&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;indispensable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;initial&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;intrinsic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;knowledgeable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;logical&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;massive&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;musical&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;nonsuccessful&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;optimistic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pedantic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;popular&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;previous&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;republican&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;satirical&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;similar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;spiritual&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;suitable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;temporary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;typical&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukrainian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;unbearable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;undisclosed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;unforgettable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;unknown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;unpardonable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;unsafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;untold&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;usable&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;vulnerable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;able&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;aggressive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;architectural&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;aware&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;casual&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;commendable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;contentious&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;current&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;despicable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;domestic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;electrical&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;environmental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;expensive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;final&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frivolous&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;horrendous&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;immeasurable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;incomprehensible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;inexplicable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;intentional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;irreplaceable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;likable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;main&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;modest&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;natural&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;nonessential&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;overzealous&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;poetic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;predictable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;punishable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;regular&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sadistic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;separate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sophisticated&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;stupendous&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tactical&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;traditional&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unanimous&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unconscionable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unethical&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unimpeded&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unnecessary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unreasonable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unsteady&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;unwilling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;visionary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;winnable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;accessible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ambiguous&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;arrogant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;beatable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cellular&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;compatible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;conventional&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cystic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dictionary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;due&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;elusive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;equitable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;extra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;flexible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;funeral&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gubernatorial&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;huge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;impeccable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;incurious&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;informative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;internal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;jealous&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;little&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;malleable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;moral&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;nonrepresentative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;operative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pathological&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;political&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;presidential&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;racial&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;remarkable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;same&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;severe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;spacious&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;substantive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;technician&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tremendous&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unarmed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;uncovered&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unfettered&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unite&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unopposed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unreliable&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;untalented&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;upper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;volatile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;adorable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;antarctic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;audacious&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;civilian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;consecutive&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;criminal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;delicious&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;discretionary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;educative&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;energetic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;eventual&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fantastic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;formal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;glamorous&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;healthy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;identifiable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;inaccessible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;induced&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;inspirational&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;investigative&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;lavish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;memorable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mythical&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;nimble&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;personable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;postal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;procedural&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;recent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;retail&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;second&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;skeptical&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;statistic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;susceptible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;theatrical&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;umpteenth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unbreakable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unedited&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unfunny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unlimited&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unprecedented&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unsecured&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;untruthful&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;valuable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;weary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;additional&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;angry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;athletic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;big&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;charitable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;conceptual&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;creative&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;defective&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;disabled&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;economic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;empty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ethic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;false&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;foreseeable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;geopolitical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;happy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hypothetical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;impractical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;indisputable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;innovative&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;invalid&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;large&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;logistical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mathematical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mutual&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;new&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;normal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;oral&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;perilous&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;porous&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;private&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;residential&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;scan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;simplistic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;spontaneous&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;superior&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tenacious&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tyrannical&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;unbelievable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;undisputed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;unforgivable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;unlawful&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;unpatriotic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;unsanitary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;untouched&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;useful&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;wary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;accountable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ambitious&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;assemble&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;behavioral&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;central&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;competitive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;copious&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;daily&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;different&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;durable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;embellish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;erratic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;extrajudicial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;flourish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;furious&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;guilty&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;humanitarian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;impenetrable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;indecisive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ingenious&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;international&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;journalistic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;live&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;manual&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;much&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;negotiable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;nonsensical&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;oppressive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;patriotic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pompous&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;prestigious&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;radical&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;renewable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;sanctimonious&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;sexual&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;special&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;successful&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;technocratic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;trivial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;unattractive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;undeniable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;unfilled&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;united&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;unorganized&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;unrepresentative&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;untapped&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;upright&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;voluminous&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;affirmative&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;appreciative&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;available&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;capable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;comic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;containable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;cumulative&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;deplorable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;diversionary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;electoral&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;entrepreneurial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;exotic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fictious&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;free&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;gracious&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;historical&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;imaginary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;inclusive&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;inexcusable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;intellectual&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;irrefutable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;libelous&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;magical&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;mixed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;nationwide&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;noncredible&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;obvious&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;overdrive&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;plausible&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;precarious&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;prosperous&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;referral&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ruinous&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sensible&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;solid&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;structural&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;systemic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;total&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unaffordable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;uncommon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unequal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unimaginable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unnamed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unqualified&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unspoken&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unwarranted&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;viscous&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;widespread&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;abusive&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;agricultural&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;archive&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;catastrophic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;commercial&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;continuous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;customary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;devious&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;dramatic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;electronic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;epidemic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;explosive&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;financial&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;full&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;horrible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;immoral&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;inconceivable&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;infamous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;interactive&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;irrepressible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;likely&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;majestic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;momentous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;nauseous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;nonmilitary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ominous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;own&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;poisonous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;preferable&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;puppy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;regulatory&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;safe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;serial&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;southeastern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;stupid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tactician&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;traumatic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;unapologetic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;unconstitutional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;unexpected&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;uninhabited&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;unneeded&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;unredacted&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;unstoppable&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;uphold&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;visual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wondrous&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;aesthetic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;apoplectic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;automotive&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;busy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;clinical&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;constitutional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;crumble&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;demographic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;disreputable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;electable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;enthusiastic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;exemplary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;few&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frantic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;illustrious&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;incapable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ineligible&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;insurmountable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;irrational&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;legislative&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lunatic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;miraculous&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;nasty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;noncompetitive&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;obnoxious&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;outstanding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;physiological&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;practical&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;programmatic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;recreational&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ridiculous&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;senior&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;socialistic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;strategic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;synthetic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;thoughtful&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unaccountable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unclassified&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unemployed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unhelpful&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unmatched&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unprofessional&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unspeakable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unveiled&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;victorious&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;whole&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;active&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;amphibious&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;assistive&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;believable&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;chaotic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;complete&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;corporate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dangerous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;difficult&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dynamic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;emblematic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;erroneous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;extraordinary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;foolish&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;general&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gullible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;humble&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;imperial&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;indefensible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;inglorious&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;intestinal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;joyous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;local&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;many&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;municipal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nervous&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nonserious&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;optic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;payable&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pontifical&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pretentious&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rapid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;replaceable&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;sanitary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;sharp&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;specific&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;such&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;technological&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tropical&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;unauthorized&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;underprivileged&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;unfiltered&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;unjust&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;unpaid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;unresolved&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;untaxed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;uptown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;vouch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;advanced&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;antitrust&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;authentic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;broad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;classic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;conservative&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;critical&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;delighted&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;dishonorable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;effective&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;enforceable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;exceptional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;favorable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;former&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;global&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;heavy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ideological&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;inactive&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;industrial&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;institutional&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;invincible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lawful&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lucky&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mendacious&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;naive&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ninth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;numerous&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ouch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;personal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;potential&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;productive&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;reciprocal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;rhetorical&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;seditious&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sloppy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;statistical&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;suspicious&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;theoretical&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unbridled&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;uneducated&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ungrateful&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unloyal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unpredictable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unsolicited&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unusable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;various&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;weekly&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;advantageous&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;anxious&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;autistic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bubble&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;classical&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;considerable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;crouch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;delirious&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;disingenuous&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;egotistical&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;enjoyable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;excessive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;federal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;formidable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;glorious&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;heinous&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;idle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;inaugural&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ineffective&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;instrumental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;invisible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;legal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;lucrative&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;metric&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;naked&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;noble&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;obese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;outlandish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pharmaceutical&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;powerful&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;professional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;recognizable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;semiprofessional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;small&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;steady&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sustainable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;therapeutic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unacceptable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unbroken&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unelectable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unhappy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unlucky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unprepared&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unsolvable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;unused&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;viable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;western&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;affected&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;applicable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;autonomous&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;cal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;combustible&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;contagious&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;cultural&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dependable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dissemble&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;elective&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;entire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;existential&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;fictional&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;fraternal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;gorgeous&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hilarious&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;imaginable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;incendiary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;inevitable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;intact&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;irredeemable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;liable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;luxurious&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;miserable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;national&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;noncontagious&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;obtrusive&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;overall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pious&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;preamble&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;prospective&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;red&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;righteous&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sensational&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;soft&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;strong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;systematic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tiny&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unaccounted&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unclean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unenthusiastic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unidentified&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unmitigated&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unprotected&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unspecified&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unverifiable&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;vigorous&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;wide&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;affordable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;arbitrary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;average&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;capitalistic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;comical&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;contemptible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;curious&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;desirable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;doable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;electric&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;envious&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;expansive&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fictitious&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fresh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;grand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;honorable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;imaginative&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;incomparable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;inexperienced&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;intensive&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;irreparable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;liberal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;magnanimous&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;modern&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;native&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;noncriminal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;offensive&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;overdue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pleasurable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;precious&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;psychotic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;regional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rumble&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sensitive&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;solitary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;stumble&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syrian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tactic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tough&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unambiguous&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unconditional&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unequivocal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unimpeachable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unnatural&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unquestionable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unstable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;unwatchable&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;visible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;willing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;admirable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;annual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;atlantic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;bilateral&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;chic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;congressional&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;credible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;deferral&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;disastrous&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ecstatic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;enable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ethical&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;familiar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;forgivable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;german&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hysterical&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;impressive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;individual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;insatiable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;invaluable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;last&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;loose&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mayoral&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mysterious&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;next&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;notable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;organic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;permissible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;probable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;realistic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;respectable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;scary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;simultaneous&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;stable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;supersonic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tenuous&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ultimate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unbiased&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;undocumented&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unfounded&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unleashed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unpleasant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unscheduled&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;untrue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;usual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;watchable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;actual&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;analytical&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;astronomical&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;beneficial&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;chargeable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;complex&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;costly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;dead&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;diplomatic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;eastern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;emotional&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;essential&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fabulous&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;foreign&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;generous&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;gymnastic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;humorous&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;implausible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;independent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;inimitable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;intolerable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;justifiable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;locational&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;marvelous&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;murderous&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;neurotic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;nonsubstantive&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;optimal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pebble&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;poor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;preventable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rational&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;reprehensible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;sarcastic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;significant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;speculative&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;sudden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tedious&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;true&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;unbalanced&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;understandable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;unfixable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;unjustified&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;unparalleled&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;unrivaled&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;unthinkable&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;urban&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;vulgarian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;academic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;alive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;arctic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ballistic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cathedral&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;common&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;contrary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cyclical&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;diagnostic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dual&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;elementary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;equal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;extensive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fiscal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fumble&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;grievous&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hospitable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;impassable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;incorruptible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;infectious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;interested&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;irresponsible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;literal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;major&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;monetary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;navigable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;nonpersonal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;open&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;paramilitary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;polish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;preliminary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;questionable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;reliable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;salacious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;serious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;southern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;subdue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tangible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;treacherous&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;unappreciated&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;uncontrollable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;unfamiliar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;unintentional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;unnoticeable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;unregulated&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;unsuccessful&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;upkeep&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;vocabulary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;aerial&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;apologetic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;automatic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bureaucratic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;clear&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;constant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;crucial&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;democratic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;disposable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;egregious&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;enormous&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;exclusive&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ferocious&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;foundational&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;golden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hideous&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;illegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;incalculable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ineffectual&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;insured&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;invitational&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;legendary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ludicrous&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;military&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;narrative&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;nominal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;oblivious&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;outrageous&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;physical&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;practic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;profitable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;recoverable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rid&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;senatorial&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;social&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;stoppable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;swiss&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;third&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unaccompanied&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unchecked&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unelected&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unheard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unmasked&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unpresidential&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unsophisticated&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unusual&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;vicious&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;white&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;admiral&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;anonymous&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;atrocious&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;biological&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;civil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;conscious&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;credulous&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;definitive&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;disciplinary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;educational&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;endemic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;evangelical&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;famous&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;forgive&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;gigantic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hazardous&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;identical&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;impulsive&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;indivisible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;insensitive&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;investigational&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;laughable&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;lovable&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;medical&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;mystical&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;nice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;notorious&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;original&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;perpetual&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;possible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;problematic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;reasonable&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;responsible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;scientific&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;single&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;stationary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;surgical&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;terrible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ultra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unborn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;uneasy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unfunded&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unlikely&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unpopular&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unsealed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;untrusted&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;valid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;weak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;acceptable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;alphabetical&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;arrive&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;basic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cautious&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;comparable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;concerned&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;controversial&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cylindrical&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;diary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;dubious&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;eligible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;equestrian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;extinguish&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;flat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fundamental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;gross&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;impeachable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;incredible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;influential&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;intermediary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;isolated&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;literary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;malicious&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;monstrous&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;necessary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;nonpolitical&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;operational&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pathetic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;politic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;prepared&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;quiet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;religious&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;salvageable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;several&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;soviet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;substantial&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;technical&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;treasonous&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;unappreciative&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;unconventional&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;unfeasible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;uninvolved&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;unofficial&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;unrelated&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;unsustainable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;uplifted&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;vocal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;young&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range granularity='1' max='20' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trump_twitter_adjectives (1).csv' id='trump_twitter_adjectives (1).csv_9A2B8ED2C97A4122A19030D2C6882F2C'>
            <properties context=''>
              <relation connection='textscan.0qbn3gp1ubwg2x147v0q21dm4mje' name='trump_twitter_adjectives (1).csv' table='[trump_twitter_adjectives (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='Word' ordinal='0' />
                  <column datatype='integer' name='Positive' ordinal='1' />
                  <column datatype='integer' name='Negative' ordinal='2' />
                  <column datatype='integer' name='Neutral' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Favorites and Retweets by years'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_twitter_adjectives (1)' name='federated.1lnp4lz0ggcl3615et3b602np618' />
          </datasources>
          <datasource-dependencies datasource='federated.1lnp4lz0ggcl3615et3b602np618'>
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Favorites' datatype='integer' name='[favorites]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Retweets' datatype='integer' name='[retweets]' role='measure' type='quantitative' />
            <column-instance column='[favorites]' derivation='Sum' name='[sum:favorites:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retweets]' derivation='Sum' name='[sum:retweets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1lnp4lz0ggcl3615et3b602np618].[none:date:qk]' included-values='in-range'>
            <min>#2009-05-04 18:54:25#</min>
            <max>#2021-01-08 15:44:28#</max>
          </filter>
          <slices>
            <column>[federated.1lnp4lz0ggcl3615et3b602np618].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:favorites:qk]' value='76' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lnp4lz0ggcl3615et3b602np618].[yr:date:ok]' value='57' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:retweets:qk]' />
              <lod column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:retweets:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lnp4lz0ggcl3615et3b602np618].[sum:favorites:qk]</rows>
        <cols>[federated.1lnp4lz0ggcl3615et3b602np618].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{5ED56B0A-6790-4CF7-B46A-9ADE3FD17B6D}' />
    </worksheet>
    <worksheet name='Top 10 adjectives by Negative tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_twitter_adjectives (1)' name='federated.1lnp4lz0ggcl3615et3b602np618' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lnp4lz0ggcl3615et3b602np618'>
            <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[Word]' derivation='None' name='[none:Word:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]' />
          <computed-sort column='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]' direction='DESC' using='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Negative:qk]' />
          <slices>
            <column>[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Negative:qk]' />
              <text column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Negative:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]</rows>
        <cols>[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Negative:qk]</cols>
      </table>
      <simple-id uuid='{F1C1871F-DA8F-4000-AD84-CA28F70CDEF6}' />
    </worksheet>
    <worksheet name='Top 10 adjectives by Neutral tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_twitter_adjectives (1)' name='federated.1lnp4lz0ggcl3615et3b602np618' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lnp4lz0ggcl3615et3b602np618'>
            <column datatype='integer' name='[Neutral]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[Word]' derivation='None' name='[none:Word:nk]' pivot='key' type='nominal' />
            <column-instance column='[Neutral]' derivation='Sum' name='[sum:Neutral:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]' />
          <computed-sort column='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]' direction='DESC' using='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Neutral:qk]' />
          <slices>
            <column>[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Neutral:qk]' />
              <text column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Neutral:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]</rows>
        <cols>[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Neutral:qk]</cols>
      </table>
      <simple-id uuid='{CB9CE0B7-7EF4-472D-AEB6-257E787D7697}' />
    </worksheet>
    <worksheet name='Top 10 adjectives by positives tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_twitter_adjectives (1)' name='federated.1lnp4lz0ggcl3615et3b602np618' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lnp4lz0ggcl3615et3b602np618'>
            <column datatype='integer' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[Word]' derivation='None' name='[none:Word:nk]' pivot='key' type='nominal' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]' />
          <computed-sort column='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]' direction='DESC' using='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Positive:qk]' />
          <slices>
            <column>[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Positive:qk]' />
              <text column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Positive:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]</rows>
        <cols>[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Positive:qk]</cols>
      </table>
      <simple-id uuid='{120A1B75-418B-4B37-87BF-91AA0BF50DED}' />
    </worksheet>
    <worksheet name='WordCloud Adjectives'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_twitter_adjectives (1)' name='federated.1lnp4lz0ggcl3615et3b602np618' />
          </datasources>
          <datasource-dependencies datasource='federated.1lnp4lz0ggcl3615et3b602np618'>
            <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Neutral]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[Word]' role='dimension' type='nominal' />
            <column-instance column='[Negative]' derivation='None' name='[none:Negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Word]' derivation='None' name='[none:Word:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neutral]' derivation='Sum' name='[sum:Neutral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Negative:qk]' included-values='in-range'>
            <min>14</min>
            <max>2460</max>
          </filter>
          <slices>
            <column>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Negative:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]' />
              <lod column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Neutral:qk]' />
              <lod column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Negative:qk]' />
              <size column='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Positive:qk]' />
              <text column='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D7ED264C-DBE7-4EB5-9B83-691D61179E63}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='25' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='WordCloud Adjectives' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='16' name='Top 10 adjectives by Negative tweets' w='32600' x='66600' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='17' name='Top 10 adjectives by Neutral tweets' w='35500' x='31100' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='23' name='Top 10 adjectives by positives tweets' w='30300' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='35' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='34' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='WordCloud Adjectives' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='23' is-fixed='true' name='Top 10 adjectives by positives tweets' w='30300' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='17' is-fixed='true' name='Top 10 adjectives by Neutral tweets' w='35500' x='31100' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='16' is-fixed='true' name='Top 10 adjectives by Negative tweets' w='32600' x='66600' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9C9A0F68-4EB5-44F3-94D0-8CE891A20923}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='WordCloud Adjectives'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Negative:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Negative:qk]</field>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE095E53-A499-444B-B108-80E06D72573F}' />
    </window>
    <window class='worksheet' name='Favorites and Retweets by years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lnp4lz0ggcl3615et3b602np618].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[none:date:qk]</field>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[sum:retweets:qk]</field>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5D0B72C-5FFF-4B37-A46D-498372350377}' />
    </window>
    <window class='worksheet' name='Top 10 adjectives by positives tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Positive:qk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]</field>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]</field>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C4DDE1F-D5EA-4F63-A040-0924BAD87221}' />
    </window>
    <window class='worksheet' name='Top 10 adjectives by Negative tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Negative:qk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]</field>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49234ABE-CA29-4ADF-B7CF-36E4B82D582C}' />
    </window>
    <window class='worksheet' name='Top 10 adjectives by Neutral tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lnp4lz0ggcl3615et3b602np618].[sum:Neutral:qk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[Top N by Parameter]</field>
            <field>[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92EEC4B2-0326-46B1-8E21-90F328E16F6B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top 10 adjectives by Negative tweets' />
        <viewpoint name='Top 10 adjectives by Neutral tweets' />
        <viewpoint name='Top 10 adjectives by positives tweets' />
        <viewpoint name='WordCloud Adjectives'>
          <zoom type='entire-view' />
          <highlight field='[federated.1lnp4lz0ggcl3615et3b602np618].[none:Word:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D7D58A3A-CB48-4D07-9824-D25ADABB78CE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Favorites and Retweets by years' width='192'>
      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
      wZAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 adjectives by Negative tweets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 adjectives by Neutral tweets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aWxc132//9xlNg6HHM5wuK+idkqWte+WqcWyYqt2kzSBHWf9xw2aqE3i
      oAEKBE3RFy1atEGAFk2RxE5Ty6gj5+fYji3LcmRJ1k5SEkWJpMR93znDWTjbnXvv/wVl2vKm
      xRKH5NznBQFezvCcc8/93LN9zvcIuq7rGBikKGKyM2BgkEwMARikNIYADFIaQwAGKY0hAIOU
      xhCAQUpjCMAgpTEEYJDSGAIwSGkMARikNIYADFIaQwAGKY0hAIOUxhCAQUpjCMAgpTEEYJDS
      GAIwSGlSRgC6rqNpWlLS1jSNZG28U1U1KenC7LjnKSWAZD0MiUQiaWnH4/GkpAuT4kskEklJ
      W1GUWxKfPA15mTH0DPkYHp+Y9nQTiQSiICJK0/++icXiWCzmaU8XQFU1dF1Dlqf/MVMUBUmS
      EUXhUz+XUgJ45Xg9z/7xbLKzYTCDmINdIIXWE4c41+lLdkYMZgFzUACgKnEUNTmDL4PZxczs
      AgWbeeVchOXOEc51TrBl1yNIvTWcvtiEPyZRvHwj21bNR57o409/epeesRByuoc1m7dTWWJP
      du4NZhEzUwB6gqH2y2Tct4q9exfiSPTyVr+JnV/8Gg7dz8nDZ+kJFFJmtrNy+5+xy5lOoLuJ
      6varVBStTnbuDWYRM1MAQEbeEjatXYxFEon0dnKxvp7O9vMAJOIyGVGNhOan/sQ5Okf8KLEI
      umcJG5Mz62YwS5mxApBtdqzXpw0lk5mCpVU8sWc5pqlPRKl/p5ms5VVUVeQSH+viaE1jsrJr
      MEuZsQL4IOaCxeSffp2jZ3TK3GaCgwFy1izGLGsMDA3Qrnvpb7xAb8SV7KwazDJmpgCsudy/
      6AMLGLKLrXseoqnxGr194CyoIMeSjrx2HdG6RvoGIhSseJASFCyySM6CZTgyjMGwwc0RUiU6
      tKZp/O7tWl4/Nf3dJE3TEAQBQfj0Vcl7lbYoJme2W9d1dF1PSvq3es9TSgCqqmIymW7+4btM
      PB5HFMWkWAIikQg2m23a04VJC4imaZjN02/FiMViyLKMJEmf+rk5uRBmYHCrGAIwSGlm5iD4
      HnFlMESLd/rtwboOAlz/MX2UOK2syEmOE3S2MAcFoDLSepVQVjnl7rQb/hJXdSbiqeMRiibe
      L6uu65w7d44jR44QCASYP38+X/va17BYLPT39/Pyyy8zNDTEzp07eeCBBxAEgbq6Og4cOICi
      KADs3r2bnTt3Jqs494Q5KAANb3cbI0LeRwSQyui6TnNzMzt37sTlcnHkyBH++7//m29/+9v8
      7Gc/Y9u2bWzcuJFnn32W9PR0Vq1aRX19PcuXL2fDhg0AZGVlJbkUd5/ZIwBdIzDYyrnzjUyI
      TtZu3kiBLcqlmho6h/xYXMWsWbsajzH9/7GIosjXvva1G35/9tln6ejowO12s2fPHmRZJhqN
      cvDgQVasWIHP56Oqqory8vIk5vzeMmsEMDHayZGTDSxZt44M/MSiEIv7wFXGhgUZBHqvceH8
      FbZtWZrsrM5YIpEIbW1tNDU1UV1dzbe//W0sFguhUIiJiQkcDgd5eXmMjY0Rj8fp7u7m7//+
      77FarSxYsIDvfve75OXlJWU9414xawTgHerEUbaGhSWFiELh5MWEB1vXeaqvXSY6ESKcVoBi
      mOE+kVAoxJkzZ+jt7cXhcBCLxaioqMDlcvHTn/4Uu92O2WwmGo2i6zr//u//DkwK55VXXuG5
      557jb//2b5Myr3+vmDUC0FQV0SR/YCJFob32FJ16Hms2LiYx3k9tywCpsax3Z3g8Hp5++ump
      t/uvf/1r/u7v/o6/+qu/YmRkBFVV6erq4uzZs5hMpqlVZJvNxvbt26murkZRlDklgFmzDpCZ
      nc94RwNjkTiJ6Bij/ii+8QR5RSXkujOI+gYJRJOdy5lLOBzm8OHD+P1+RFHE6/USiUQAaGtr
      Izs7G4vFwpEjR9izZw/xeJznn3+evr4+IpEIb731FoWFhXPq4YdZ1AJk5C5g3cIAhw/8LxHJ
      yZbdn2PRinIO/+kValQzZfPKKfRoiIKAJT0Du2XWFG1aMJlMtLS0sH//fqLRKIWFhXz/+9/H
      4XBw4cIF/uVf/gWLxcLjjz/O8uXLgckW4x//8R/x+/0sXbqUffv2JcVKci9JKS9QTfc4jSOx
      ZGdl2ih3WVlfYDW8QJ9CSglgIqqgCZ9+Q+4FSkJBFEUkcXrTNkkCgho3BPAppFQ/wWoSMZmm
      v8jxuJZEN+i0JzmrmDWDYAODe0FKtQADgRhj0emfKtLU65szbhKm724iIHB/Yfq0pTdbSSkB
      DAbjNI4kL1jsdCKAIYBbwOgCGaQ0M64FUGJh4opGLBImrglkZLlIM0voWoKJwDihqIo5zYHT
      YUONhIhLadgtEgkljD+o4HRmIIkQCQYQ0zKxTP+kj8EsYsYJYODaCY7VhXC7zMSDXoTSrTy6
      aR7+7nrOXe5D0RSicTNrtu8gs/cUJ5VlPL6miLH2E/z2oJ+vfuvPyM9UqH3rGKWPPEZJcmYA
      DWYJM68LJFsoXLiSnQ8/wmNfeACpb5Q4MdrrO8mpvJ/16zawulDjXNMArrJS4r39RHQN31CI
      JfMy6QtG0bzdDDvmkW88/AY3Yca1AIgS6Q4HFlkEzJgAHR+dzf0o2nl6r3+ssMKCmJlHsfYG
      feMl9IdK2LpO4Hi7lyLbIK6y+5hbi/YG94KZJ4CPxUFucSaZG3azPNeKrsaJqxIgk1dio7W6
      Dq3wfjJzTGSeOcfFTDtLS43dYAY3Z+Z1gT4WOwuXl9Jw9I8cfPMQh99+h4ZePwCZuYW013WQ
      X2BHkNwUpA/S4hNw2o3+j8HNmXFeoHg0hKJbsNtMQJyAT8GeZUdUFQK+MfzhOJI5Dbc7C6tJ
      QlUijI0FycjOxiqLxIJjjCtmsrMcSB9Yd9I0jdru8ZRaB/j62jwjMJZhhptE0zR6vGFGItNf
      XE1Tr4fpm74GVxBgdZHDEIBhhnufgkwLpdmpFRrR4NOZJWMAA4N7Q0q9kuKqRkyf/gOrFUVD
      EkHUPnvaAmA3G8vbd4uUEkDTcJirY0qys/GZkER4YkVOsrMxZ0gpAcw1dF2nqamJX/ziFwwN
      DeF2u3nqqafYtGkTwWCQ3/72t5w+fRq73c6TTz5JVVUVra2t/Md//AeDg4O4XC6efPJJtm7d
      Oqdi/dwOhgBmORMTE/zgBz+grKyMxsZGfv7zn7Ny5UrOnDlDWVkZX/nKV/B6vfzrv/4r69ev
      JxAI8Dd/8zeUl5dz7do1/u3f/o2VK1ficDiSXZSkMOMEMDHawenjp+j0xcldsJqqDcugv4ba
      iXIeXJZLcPgqr7/dzK7Hd+Oxm2mtPoxesRNrz59oD2cy1NpIADdVj+yiYo7HBhUEgbVr16Lr
      OpqmYbPZcLvdCILAgw8+OBXkKjMzE6fTiaZprF69+mM/n6rMMAFMcPH4WdLvf5hvFttoPXmI
      Iw1uHpvvZKi2g8iyXAKjPeihCTrHo3hsIbp7BJatkhi90MeQqZiHv/xVtLZjvN08QsXG0mQX
      6J6jaRpvvPEGly5dIhAI8Pjjj0/N++u6zsDAAPv372fdunVTb/mDBw9y8eJF/H4/e/fuxW5P
      3YCqM2saNNzPYLyYynnZyGY7C9csIdYxQNRRQrHcw0BAwTegsObBefR3+VCGO/G6ynDLYE5z
      sGjJUjIsJpzOrGmPxZ8sBEFg/vz5bNy4EY/Hw5kzZ0gkEui6TnV1NT//+c/ZtWsXe/funfpO
      RUUFmzdvJi8vj7Nnz06FP09FZpYAJBlRU1DfC2uvKCQkEVFII784jf62evrUYsoWLsQ53Ep9
      q5eSilxSeVJQEASWLFnCjh07+Ou//mtGR0fp6uqivb2dV155hX379rFx40YsFsvUdxYvXkxV
      VRX79u3D7/fT0dGRxBIkl5klAEshpVlD1NS1MjbaT/Xpq+QtLsEMZGQXMHa+BqG4EIuQSUHW
      IOd6ZEqdlpv+27lKLBbjxRdfpLa2lv7+fmpqahgZGcHhcPDaa6+xZcsWTCYTg4ODDA0NEY1G
      OXDgANXV1fT391NbW8vg4OCcjPt/q8ywMYCZ+x7cxaWzZzhyNE7+og08sCAbAcjILsFTPEpJ
      sR0Q8VQsZ5EskWmbFEBm/nymLC/2HObnzv0N4Wazmfvvv58XX3wRr9eLx+PhRz/6EU6nk+zs
      bA4dOsTrr7+OLMvY7XZ+8pOfsGrVKvbv34/X68XtdvPDH/4Qj8eT7KIkjZQyw9X3B2jxJaG/
      +94dvgvjElkU+PPK7Fv+vGGGM8xwU1Tm2rm/yDDDGbzPzBoDGBhMM4YADFKalGqTO31R+ibC
      056urumTq60fGgMUOMwszDa2biaTGSwAhaG2fkxFBbgsd6ffHoprjEzMnEPEHEbUrqQzg7tA
      MTrO1zMQTo09vAbJYQYL4EaUyDhXL57j5OlzNPd5UXWd4GAHfb7JaM/R4ACX6luJKhqgMdzZ
      wnjqHAZjcIfMDgHocRpOvk2LDzLSRJpOHqd5NIw+3s6ppgF0wNd9gT8dq2MkFAVtnCs1bURn
      R+kMksgMHgN8gEALDYFSPv+FddiA+Y4J/tDQz5IN8zHXdxHQihjuV9m4IotOb4S8SAfenApy
      jdBwBjdhdrwjw2EiaWlYr6+o2tIdKLE4WAsoSuujb7CPQb2MlctyGOsepr9nnIISV6oYQg0+
      A7NDAO5i8sfbaB0LoyoRrjZ2kZPvAkzklXloOV6NqawIm3seeb56zo6bmedKXY+7wa0zg7tA
      AqIkIQqAOYdVK3M4/voLHFUEsgqXsn3BpIHL4cpjqL+NRbstgJ1ct8L5UYE0a+q6RA1unZQy
      w13qD9I6PnPWAea5LKwuuLeuVcMMZ5jhpih1WsjLnP6HIZFIIAgiknRjjzPNNDt6oHOZlBKA
      wyLhMiXDDYrhBp2hpFSNaLqOqiUhOK4O6EylLQggpnAkhplESgmgaThC63gw2dlgnsvCqnvc
      9ze4NWacAHRNQ0dAvH6o9GhfI2OJQhaVZiY5Z/cGXdfp7u7mueee4+rVq1RWVvKjH/2ItLQ0
      enp6+M1vfkNjYyOLFy/mxz/+McPDw/zkJz8hHo9Pfb+qqoqnn346KYPN2c6MG4W1Vb/O0abR
      qd8jIS++4Nw19USjUV566SX27t3L/v37WbZsGb/4xS8Ih8McOHCAPXv2sH//flatWsV//ud/
      UlxczAsvvMBLL73EgQMH+OpXv0pWVpYxvrhDknbXlPAYF06+Q31XEM+itezetIixyyc5ePwC
      frGT1tpcNlU9jBOd8Egbrx84xMCEmU179rI0z44aHafu5BEudQXIXbKeHWsXYzONc/H0CGXz
      BU6cusKCjZ9jSZ41WUW8JSwWC9/73vewWifzWVlZSVNTE7Is893vfndqCrOyspJLly6hqiqy
      LKPrOj6fj+rqan7wgx8gijPuXTYrSJIAEjScOEzAs5mvV3noPvcmB8+k89jW7XwuFqLLsZEd
      lZMLXT31ITr6ZR7Z+yVc8Wu8dOwK8764lp7aUyTKtvH1B9NoPXGY49dcPLxMo+vKRboCOazc
      9jClrpn98MPk7JDNZkNVVaqrq3nttdf41re+NRXHR1VVampqePXVV/nmN795Q3yf06dPU1lZ
      mdJRHT4rSRKAj8GBdFZsL8FsgvnrVtPwuzYCW8s/+lGLg8oVC8nLsALZuPVeNPxcvdBEh6WX
      SwARH5F55Ty8zIMg2bhvwyZKnDP/4YfJPryqqrz66qtUV1fz1FNPMX/+/Knrr7/+OqdPn+ap
      p55iwYIFU99TFIW6ujo+//nPJzH3s58kdxx13tsneHuTkxrWjAo+/8TjFFs+OJ3YjzUjF4/T
      OmuMcJqmceDAAcbHx/mnf/qnqZVLVVX5/e9/z+joKP/8z/98w4rme2EPnU7nDaIwuH2S1HF0
      kZcfor6+m7gSoeVcLVr5PDIASRQIen3EVRV1Kkbih3GSm+OnpraVWEJlYqyTxk7vdBbgrhEM
      BmlpaeGxxx5DFEV0XUfXdcLhMFevXuXxxx+/4bqu60QiEY4cOcKePXswJWFhby6RpBZAYtkD
      D6OcfIf//W0Az6J1PLKhBBkoXLqe3qNHeP7/LrNp+0PkOLJxJd7r99rIK3IhIVG5/XESp97h
      +f85js1VxrbtWwCB3CJ3spu12yIajdLV1cUPf/hDYDLW50MPPcSePXvo6enhmWeembq+Y8cO
      vvGNb9Df38+KFSuoqKhIZtbnBCllhqufIWa46VwIM8xwhhluiqU5aawonP4iK4qCKIo3rQyD
      6SelBCAIJPU0lFQ+iWWmYqyeGKQ0KdUC9PpjDEej056upmkICAiiwBKPjQxLSt32Gc0d1EQC
      b08XY7qT8pJ7MOOSiNI7MIYrL480093tM/tjKj3+5A6C52VZwditOWO4/S5Q1MvJmgtcPHmc
      kXvxMtV11ESCT1oBMDC4m9z2C9w3OIjsmc8SsY/eXi958yfDjwRGugnFwOsdR87MpSgT+vqG
      UM1OSkuLsJsFEmEf7Z19RDUTBWXzyE43Ew2PE46ZkeLDDIQtzC/MQrbZsFwfMEb9Q3T2DpEQ
      7RSWlpBp1hgd6GbIF0YwOSiZV0KGRWZirJeQamZ8ZIi4lE75vBLSzcasi8Gnc9sCGB0dxumq
      JMescWV0AK3ChSTA1dN/5Jq+mHkekZ4LtVzJLiHflY5/uJmgnsaaEonzNeeJy3YkLciJ9mEe
      2P0A8ZE2WhpG8cYUPAuXUxH1cbKmnt3bt+NURzh+6Dh6XiHpUhDZ7sScGaW1uQvdZkcLdtDq
      Vdm7eQGd59/klLeIJSWZhAfqGUqksXNZ7r24ZwZziNsUQJSBnlGKd+Ti1hXGm1qJJJaQbhKx
      ZXpYU1nF4myFy2NDRFZtYl2+jf52id7xMONDQYb9MQpLc5Gx4x+5zLWeccqFCVoHdf78id04
      rTLCxND1tDQGLtdC5YM8VOlB4LpfSFNYuDjGkDdEwp5B94UeQpsXYLE7Wbv8Ie7PE6HfxO97
      pn+wazD7uD0B+Jo5e7GdRt9vsegx+rpCzN+8lRVuEQQBURSn5toFUbweE/96VybqIzgeJ+KZ
      QAScJcspz7aij6exaGkxGVYTN06TawT9CTJzrVP7ZwXA19/E6ZoeXHkuJCFGPKjw3qMuitLk
      /zDm2w1ukdsQQIL2i42s/uo+tpZOWo2jne9ysL6Hyqp5N/12enoW5vQgi+5bgztNYiI4jmA2
      ERAEJFH8mAPkJPJKMmlo7SWUuwgrCRRNIDTaT/qi9Wxc7CQ41kjnhZ5bL4KBwYe4ZQHo0TEu
      jzjYuMWO+frg0ly+nPTz1YxFb0EAnlIW53Tw+ksvgCDhLKhgw/q1n/INgYzyVRR3HecP/1eN
      YM1ixcYHKHTlMXTsj7xw0YY710ZUNQa6BnfOLZvhdF0joWrIkvSBJX2dhJJAlE3oWgJBlBEF
      HTWhgighiQKapqLrAqIkgKahKJNTnJIkI0siuq5d/7s42QhcT0e6no6mJUgoKrogIMsmREEn
      oShoOoiyhKCBaJJBTaALMpIIaCoJXUD+QCAqTdOoH0i+GW5bWQYe+/RZmA0z3Ke/IFPKDToa
      ijGhTv/4QFVVhOtjpPx0M9ZpjAhnCMBwg06RZZPJSUpkOOOc4JmKYYYzSGlS6pUUiqso0xRi
      SBQhO83YrjjTSSkBdPtjtPvVaUnLKgvsWZA1LWkZ3Dmzogs0UPsO5/sDH7nubT3LicbBJOTo
      9onH4xw/fpxvfOMbHD58GJiM7tDc3My+ffv40pe+xF/+5V9y7NgxdF1nfHycn/70p3z5y1/m
      mWee4erVq0kuwdxkVghASygkPiaqs2v+BrYuzUtCjm6fmpoa6urqyM3NRVEUYHKW5MUXX+Sx
      xx7jhRde4Dvf+Q6vvvoqsViMw4cPU1BQwG9+8xt27NjBK6+8QopM2E0rs6QLlKDj4jFaDw8T
      FdJZ8cAuVs7LZuTiH7li3cTOpW5Cw62cfPcM3b4osqziXLSHz28qTXbGp1i7di2bNm1i//79
      N1y3Wq2kpaUhCAJWqxWbzUYsFuPy5ct873vfIy0tjS1btnDy5ElCoRAOhyNJJZibzBIB6GQW
      3c+OzxUT7W/g4MU6FhRUoSXiKKoORLl6rpb05bv55oJsQk1vc8ib/OgPH8RsNn9kGtRkMvGF
      L3yB//qv/+L555/HbDbzF3/xF0iShCRJUw/7eyJ5r+UwuHvMEgGYcHmcmCURU24RWfIQkRse
      Bh9jkSI2LszBJIAsf9hYNzOJx+McPXqUNWvWsG3bNurr6zlx4gSVlZUoijL1wKuqSjQaNQLg
      3gNm3R3V4nFiqJhueBhkRDVKbJZtI/P7/Vy5coVHH32UgoICtm3bxvj4OD6fD4fDQXd3NwBj
      Y2NomkZaWlqSczz3mB0tgCTg7Wnj2kQaw20NmNz34Ugz8f6UvpvS4hAnj55lcZGDoSstRFzF
      Sczwjbw32zM6OkpzczPDw8M4nU6WLFlCeXk5v/zlL1m5ciVtbW0IgkBhYSGPPvoov/rVr9i1
      axe1tbWsXr3aCIN4D5D+4R/+4R+SnYmbIVqtJPwjDI8GSCtYxNr7KrBKAoJsJj3DjTPNTGZO
      AVJwkOHxOJk2jXFTActL3p+H13Wd4VAcX2x6ZlJkUWCBe9KDk0gkqK+vp7GxEYfDgclkYmxs
      jEWLFrFx40b8fj9tbW24XC6efPJJMjMzyc7Oxu1209zczIoVK9i5c+cdCSCRSCRNOJqmoet6
      UgKCqaqKKIo37TbOGTNc16VTjIguMkwq3Y1NOFbtYn2Zc+rvmqbRNhZmYGJ6+klmSWBD8eQg
      NpleIMMMlyJmOHdBIYPXOulVBLKXbWJp8UfPFCtzWljgMboRBu8zZwSQ7iljvacs2dkwmGXM
      ulkgA4O7yZxpAW6FjvEYfROfHC2iLNNMeZYRti2VSCkBJDSdmPrJY37lA/MBqqpy9OhR3nrr
      LVRVxWKx8MUvfpH09HSee+65qUUqURTZtm0be/bsMTa8zELmWI2FOPvqO+Tv/DNK7Z/tP8Xj
      cS5dusTevXspKytDEARcLheSJLFv376p44refPNNAoGAsUo7S0maADQlTEdDLZfbR5HsmRSU
      L2P1wlx8fVcJWosIt1TjtVewdmkB3o4r1FzpQHAUs3HzSlxWmYmRdqprL+ON6ORUrGD9Qg/X
      6o5x5nI9jnCcPFc+Gx7cTPYd9mhisRiaprFgwQLy8/Nv+Ftx8eQim8/no6+vj3379hkCmKUk
      qdZ0Oi4e5dKghfVbtrImN05t+xgAgf6rnDp6jF4hj8XleYQGm7nSHWfVps1UZoc4+m4DUR1C
      gSB5i9fwwOY10HGJxvEEFctWsqiwiFVbqti8fjmZn2HGU1VVWlpa2LdvH0888QQ/+9nP8Pl8
      U5ZkTdM4ceIEy5cvJycn527cFIMkkKQWIMpAb4zVD68lP02EeCZcj4ioxRXE3Eq2rZmPSRJo
      ravnWofAuK8XiDE6MMDwAyvIcWfTVltHkz9KcLATj3cr9+dnYLdaycxyk/UZj+Byu9388pe/
      RNd1QqEQzz33HC+//DJf//rXkWWZUCjElStX+NKXvmSc/DKLSdpJ8bpmw2L5aAMk2dIpzcpH
      liYfKiUhUH7fetaUOxAAUTLjMIc4d/A0psoNbFlhY+RyhM7E3V3h1bTJ/yeKIg6Hgy1btvD2
      229PLe/X1dXhcrkoKSm5q+kaTC9J6gKlYbf7aG4eJqFE6RsYIjF1JrAwGVv0+m/OnFx8vT2Y
      HVlkZdiIjI0TF0MEJtIpKS0kw6IyOjTG5PMvIwgRAsEomqryKRM+N6Wvr4/f/e53eL1eAoEA
      77zzDsXFxUiSRCQS4fjx4+zYsSMpy/wGd4+knRO8eO0mThw/xG9OC5RnC2Ce1KI5LYM08/u6
      zKlYzQrfKf7w/HMkZDtL12wjBw9LK0289fxzyK5CyrJLcdllwMri1Ut4++D/0uisYNejO8i5
      w0Gw2+1GkiSeeeYZ4vE427Ztmzq0uqWlhfLycuOc3jlA0sxw3oFONEc+LhsM1B7ipL6KL2+4
      dxZmTdO4OjJBd+iTizsvy8xCl/Wup22Y4Qwz3EdQw8McffsdxmM6GQWL2FV17ze3l2ZaKM36
      5BtikozBbKoxZ+zQN0PTNFRVTYo33mgBZm4LYKzeGKQ0c8wK8emMRRKEgu9HhsuyybhtKXUL
      DD7E3Kx9JYJfkchMu7Hp9UUS9Ey83+ObB4YAUpy52QUaaeBw/UCyc2EwC5gBrz+dRCyMzxdA
      0QUsVivpDicWSSMWDuILhEGykOVyYpFFdE0lHBwnEI4jWey4nA5kUUDXVCYCPoIRBdEbQNWy
      k10wg1lA0gWQiPioPvkugyEBkywR9A+xcvf/R7mpn5PHThHAipCIkVa0iqr184kMNHH0ZANY
      rSRiMQru387Ghdn4uuo4VtuOaLFiCg8Syy9LdtEMZgFJF8DYQCsBsZSHH12BTYYzr/0KDRhs
      b0AvXMfeVaUIiSCn3nydtrFSYg31FKzdy+oyO4lQG2++dpHRik20Xupi8YOPsDjbBn01/L8e
      4/A8g5uT9DFANBYjK68Im0lEEETE62tREwEfjuwcTJKIbMkk32NlPOjF75PIznUgiSKWjCJy
      bF6CET9+JZ8STxri9bO4PnrsqoHBR0m6AEyyiaBvFEXTUZUoMWVylsbucBIYG5m8Hg8wOBIh
      M91FhjPB6HAQTdOIB/sYiWSRbrMgx0cZCcXRdY1oNIr2MeHUDQw+TNK7QO68Mmg8zsE32jCb
      zIz5FLKB3IpKWo6e5uDAFQQljClvPeuzTUQr7+PoqTd5oyENJRImd20VHsnNkuVpvPvGazRm
      pGOJDBJz598saQOD5AvAlOZi3ZYqgpEYiDLXJnqRJbBlFrJ150N4/RPoshV3tguLAOaCpex8
      KA//RAzJ6iDblYEA5C/dwu7cMcIJgXT7enTTZ9wUbJASJF0A0cAwddUXCeoSegq6gQwAAAiK
      SURBVCIMzrUUOQFBxOrIosBx4zlbgiiRnuUh/UPHb4myBVduAa5PSSvLJiObhBt+N0htkm6G
      01WFwPgYgYk4yGZc2R7s5rs/g6NpGolEIimGNEVREEUxKUFiY7EYFktyYh2pqoqu60m55/F4
      HFmWUyc47s3QNG3KlZmMtAVBSMreYVVVkyI8YCp0zEy+5ynVB5AkKSl26GS3AMnatqmqKpqm
      Jc2CfistQNKnQQ0MkokhgGkgmWFTkh2yJVnp32q6KTMGMDD4OIwWwCClMQRgkNIYAjBIaWbF
      KZF3HV2hv/kSNZea8MUtZLsdfJaIKLoapb+lgfOXrtA94MXmysFuFhH0BMPtVzh3sYGRsIjH
      45xMR08w0tHAuQsNDE8I5OQ4P1P6oBPoaaCmdRinOweLDLoWo/XiWeqa2oibXGQ5rJNOWz1O
      y8Wz1DW2ETdl4cywTjlw7yTdxMQoF2tqaWztICpk4nLaEHWVwEAb52ov0TMWw+1xYZYE0FUC
      g+1U19bRPRYj25OFWbqzd7CuBLlad576xmaGgypZ7vfSUOi7VkftpauMKx+o2xvq3Ey2OwNJ
      SMUWQFcZvnqOE9d8FBQXMN78LmevDt95GEUtTtvF01zqDpFfWobbHOTU8bP4YxpjbRc4Wt9P
      fnEhsa4znKgfIKFreDvqeKeul/ziQpTusxy/1E/iTtPXdRKBfk6ca6ej+Ry+KKAr9NQc5sKI
      maKiXK6dOURTf2Dq+vlhmeLiPJrPvkVTr587nQZRgoMcPXISJT2X0qI8tICPCBAabuftU1fI
      zC3AOt7A2+faiOswMdrJkVP1OHILsPkbOXymlfgdpK2rYS69e5TWgExJaQnacAPHzjYSVVWG
      m85wojlAQXEB3qsnqL42gvaROj8xVecptRAGoCshGjqDrN30APOy7ZS4LRw/d4XgvCqcljt4
      FQoyxcs2Uma2IYuQiHgYOPYOodAEPZ0jLFu7hSVFmcQLMjl65Dzeiu10dAyxdO1mlhQ7UYqy
      eOfwOcYW5pObdvvp67pKY90FnItXYm05DIAWGuBst43PfWEdDkHHpQc429HN0sxMznRaeOSL
      63CIAi4hyJnOLpYVLedONlD0dzQj5d/H2vsqbmjBWrtb8SzawPIl+YiLi5j4wxt0ByoQu1vI
      mr+B+5YUIC4pJvLy63QFFrAg8/bew3p0gs6IiU3bVpDjsFDksnDkXAPRUAGXOyfYsGUbZa40
      irNMvFvbQLBo5SfWecq1AGo8jmKSyLBOhkC0WB3IZoV4XL3JNz8BQcRitSELOqoSoa/lAlHr
      PJxWiOsaGelpAMgmBza7SngiRkxLkJk+6VaVTA7s6RrhiHL7aes6kZFGOsP5LJufO3U5HgqC
      KwuHCAgCGc5MJiIRlFAI3eUk/frDmpGZSTga4U4bH/9ID+NDLbz4P7/mV88+z+lrgyiaTjgU
      IMOdNdm1EtPJzhbxB2KT17Ndk9cFO26PyLg/dtvpCtZ0Khwq9de68Pq8tDc3ITvLMBNHMZvI
      uO59stgyEE0KkYnIh+o8Y6rOU68FuG7OEq93fAVRQpJN6Hf8GEwS8/dx+tQ5wvb57Ni2Aks8
      iCS9b38QRAGTyYym6TdeZ/L67S/H6CihAc7W9LNmx8M4TIkPlFHDYnnf/iDLMoIoouka1g9c
      l27BKvBphENBRM96vvjwQ8jKKIdePUyT4wsIgoBJft/+YLZYCGs6Atxgi7BYrAS12w9rL4gy
      ucWl9F+u51BLHIs9h8UrPIgkMMkSwvUyiaKILMnomoYsSx+oc3GyznU99QQgSRJKXCGeSABm
      EkocJR5HEu/Qp6PrKMFejh+7hOe+LWwq8WARQRNFVFUnFouDw4qmJohGophNJjRNJxqLATY0
      LUEkHMF0245JnZGuRi43NtLS1wW6znB/F5cH/o9HH1nFRMCLpoOITiQcQRImhTYRHEcDJCAa
      iSB+hpXa9KwcXM5MzJKIIOewYIEHrz+EQ5KZmJhA1zMQ0AgGQljLTEiyiWBoAj1n8nogEMRa
      cvs+pVhglAtNXSzb+iiFWWYiI528VVNH7tpK4jEFJZEATJN1qyiYTCaUeOKjdS5JqdcFEq12
      CswJrrT1kVAT9LddJmEqJN12h7dCi9Nw8QpZy9axcl4uFvn620c2k5dupqmlA0VNMNxRh59i
      spxW8hw2rjZ3oKgqo50X8enFZDluV4AiBct28v0fP8N3vvMdnn7622xaOZ8//8oTzC/MoyTS
      S22PH1VTuHa1lexsD7Izh9Jo3+R1VeHa1RZcbg/CHW6gzs0voPdKHd5oAjU2Tn9vELvTjjsn
      n95rDYSVBIH+Otr9+RS6TbhyCui7eoUJJUFwoJ628TyKsm/fKCegE4+GCccTIIASnSASUxBs
      DgpNcS639ZNQE/S2XUGzFOBwOigwJ7j8Xp23v1/nKWiF0IkHBzh15BgtwyHSc+bz4PYt5GeY
      7+gx0GJB/vTy/9A0JmM1TT781ryFPLJjK5l4qX73GA2941izSqh6qIqiTDOJiRFq3z3O5R4f
      lsxiqnZvp9hp+Uz7+DU1walDv6Ns61coztCJjLXz1pvHGA5r5FSs5oFN9+GySUS9nRw6+A7D
      YRXPvNVs27yCLJt8Z2WPh2mrP83punZioo0lqx9g3bJS5ISfhrPvUtM8ANZsNu3axeI8B1os
      QOO541RfGwCLm407d7GkIOO209ZVhaH2ek7VXGYsqGB1erhv7SaWlXnQQgOcPHKM1pEQjtyF
      PLh9E3kOE8on1XnqCcDA4H1SrgtkYPBBDAEYpDSGAAxSGkMABimNIQCDlMYQgEFKYwjAIKUx
      BGCQ0hgCMEhpDAEYpDSGAAxSGkMABimNIQCDlMYQgEFKYwjAIKUxBGCQ0hgCMEhpDAEYpDSG
      AAxSGkMABimNIQCDlMYQgEFKYwjAIKX5/wFgHzhv9pVzsQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 adjectives by positives tweets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WordCloud Adjectives' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy915MlSXbm9/PQEVer1JmltWg1okf1qO2ZATDQchfkEsYH0oxm/G/4tOQL
      QcBg3FkCGGjMAKN6RE/rallapFZXq5DufIhbWZWVpbqrurpmKz+ztJs3bgiPCD/ux4/4jlBK
      KXaxiycU2ifdgF3s4pPErgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs
      4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs
      4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs
      4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs4onGrgDs
      4onGrgDs4omG8Uk3YBe3h1IKIcSO/69/B7ZtuxukkmjiV2esU0oC4rb31/FjVjohlYxJ24+x
      dI1EKmxTYxgmeJZO10/YW7YxNEHsD9BtBxQITaCUQiUJSkqUkrsC8Lih02qiaRpRGGLZDlJK
      wjBA1zTcTJZ+r4tt2+imSSPZJGvm6Mc9cmYeTegopbB0i1jG1P118laJdthkNrv3kd+L7Cyh
      5ae3b2vNI3KTyKgOKkElAzR7DOmvIjSbJFhBs6poVhWMDKAQmr11fBBLdE0QJYrxrMW1ps8g
      kmQsjbafcLBiMJGzuF76tLe+jFMo011dwM4WUEqimxZJGGJ6mV0BuBeSOAaRjkZxHGNZ1tZv
      MkmQSmEYD+cxJklC4PsITaAJDX/YJx0JNaRSDHpdmpsblKs1HMOgF3UYxH3Wh8uUnRpSSSa8
      aQLp04u6dMIWrbBBwSo/lPZ9GETv/S0IgRobQDRAJRHJlR+j7/0SenYc6a+iOeMgNJLBNUj6
      YBbRrAoIHRV3kf4ieubwtvO6ps5GP2LKsXBNjaNjHlIpdCFIlELXBNfnDSEETr6ETGJMN4Nu
      OyRhgOlmUFKiGcZ/fwIQBz5KJgAITUe37PtWFW6HXq/HhbMfMLt3H3EU0Wm3qI2N02w0cD0P
      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
    </thumbnail>
  </thumbnails>
</workbook>
